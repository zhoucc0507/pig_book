<template>
  <view class="page">
    <view class="user-card">
      <view class="card-header">
        <user-info
          :origin_price.sync="origin_price"
          :spulars_price.sync="spulars_price"
          :total_price.sync="total_price"
          :user.sync="user" />
      </view>
      <view class="card-content">
        <view class="title">
          小账本详情
          <image style="width: 42rpx; height: 42rpx; margin-left: 24rpx" bindtap="recordRepair" src="../images/icon_repair.png" />
          <view class="edit">
            <view bindtap="recordInsert" style="display: flex; width: 150rpx; justify-content: flex-end">
              <image src="../images/icon_add.png"  />
            </view>
            <image style="width: 48rpx; height: 48rpx; margin-left: 24rpx" bindtap="onCateFilter" src="../images/icon_screen.png" />
          </view>
        </view>
        <view style="height: {{ cates_show ? 128 : 0 }}rpx; margin: {{ cates_show ? '24rpx 0' : 0 }}" class="cates_list">
          <repeat for="{{ cates }}" item="cate">
            <span bindtap="onChooseCate({{ cate }})" style="background: {{ cate.background }}; opacity: {{ cate.name === cate_select ? 0.3 : 1 }}; pointer-events: {{ cate.name === cate_select ? 'none' : '' }}">{{ cate.name }}</span>
          </repeat>
          <span bindtap="onReset" style="color: #999; border: 2rpx dashed; padding: 4rpx 88rpx; border-radius: 8rpx">重置</span>
        </view>
        <view class="pay_list">
          <view class="deatial" style="color: #fff; background: #ffb3b3; padding: 20rpx; font-weight: 600; margin-top: 0">
            <view class="date" bindtap="arrowChange" style="pointer-events: {{ pay_list.length < 5 ? 'none' : '' }}"><image wx:if="{{ pay_list.length > 4 }}" style="transform: {{ arrow_show ? 'rotate(180deg)' : '' }}" src="../images/icon_arrow.png" class="icon_arrow" />日期</view>
            <view class="pay_price">支出金额</view>
            <view class="surplus_price">可支配金额</view>
          </view>
          <view class="item_list" wx:if="{{ pay_list.length !== 0 }}" style="height: {{ arrow_show ? pay_list.length * 102 : pay_list.length > 4 ? 420 : '' }}rpx">
            <repeat for="{{ pay_list }}" item="item">
              <view class="deatial">
                <view class="date">{{ item.date }}</view>
                <view class="pay_price">{{ common.getPrice(item.pay_price) }}</view>
                <view class="surplus_price" bindtap="viewMore({{ item }})" style="color: {{ origin_price - item.pay_price > 0 ? '#18baa5' : '#ff547a' }}">
                  <span style="margin: 0 24rpx 0 auto; text-align: center">{{ common.getPrice(origin_price - item.pay_price) }}</span>
                  <button plain="true">详情</button>
                </view>
              </view>
            </repeat>
          </view>
          <view wx:else class="empty">暂无记录</view>
        </view>
      </view>
    </view>
    <block wx:if="{{ !arrow_show && !cates_show && !quota_show && !record_show && !user_show && !repair_show && !detial_show }}">
      <view class="charts-title" wx:if="{{ pay_list.length !== 0 }}">小账本统计</view>
      <scatter-chart />
    </block>
    <modal-quota
      :show.sync="quota_show"
      user_edit="false"
      cate_edit="false"
      title="额度(有点数er)"
      placeholder="请输入额度" />
    <modal-record
      :show.sync="record_show"
      :cates.sync="cates"
      user_edit="false"
      cate_edit="true"
      repair_edit="flash"
      title="支出金额(诚信是金)"
      placeholder="请输入支出金额" />
    <modal-repair
      :show.sync="repair_show"
      :cates.sync="cates"
      :date.sync="repair_date"
      user_edit="false"
      cate_edit="true"
      repair_edit="true"
      title="支出金额(诚信是金)"
      placeholder="请输入支出金额" />
    <modal-detial
     :show.sync="detial_show"
     :detial.sync="detial"
     :cates.sync="cates"
     :origin_price.sync="origin_price"
     title="支出详情"
     detial_edit="true" />
    <modal-user
      :show.sync="user_show"
      :user.sync="user"
      title="用户信息🐷"
      user_edit="true" />
  </view>
</template>
<script>
import wepy from 'wepy'
import UserInfo from '../components/user_info'
import ModalPlugin from '../components/modal_plugin'
import ScatterChart from '../components/echarts/scatter_charts'
import moment from 'moment'
import 'moment/locale/zh-cn'
import common from '../common.wxs'
export default class MoneyEdit extends wepy.page {
  wxs = {
    common: common
  }

  config = {
    usingComponents: {
      'ec-canvas': '../components/echarts/ec-canvas/ec-canvas'
    }
  }

  components = {
    'user-info': UserInfo,
    'modal-quota': ModalPlugin,
    'modal-record': ModalPlugin,
    'modal-user': ModalPlugin,
    'modal-repair': ModalPlugin,
    'modal-detial': ModalPlugin,
    'scatter-chart': ScatterChart
  }

  data = {
    origin_price: 0,
    total_price: 0,
    spulars_price: '',
    quota: '',
    user: {
      user_name: '',
      user_desc: '',
      avatar_url: ''
    },
    record: '',
    cate_value: '',
    cate: '',
    cate_select: '',
    cates_show: false,
    quota_show: false,
    record_show: false,
    user_show: false,
    repair_show: false,
    detial_show: false,
    arrow_show: false,
    repair_date: '',
    detial: {},
    pay_list: [],
    cates: [
      {name: '红包', background: '#ff4d4f'},
      {name: '餐饮', background: '#ffc300'},
      {name: '出行', background: '#48b755'},
      {name: '百货', background: '#b4b68f'},
      {name: '服饰', background: '#03b6fd'},
      {name: '美妆', background: '#bc8ddb'},
      {name: '数码', background: '#c24770'},
      {name: '娱乐', background: '#ca9654'}
    ]
  }

  events = {
    'onConfirm': () => {
      if (this.quota_show) {
        if (!this.quota) {
          wepy.showToast({ title: '请输入额度', icon: 'none' })
        } else if (this.quota < 0) {
          wepy.showToast({ title: '额度能是负数咩?ju头', icon: 'none' })
        } else if (this.quota > 110) {
          wepy.showToast({ title: '偷摸干啥捏?米点数', icon: 'none' })
        } else {
          wepy.setStorageSync('origin_price', this.quota)
          this.quota = ''
          this.quota_show = false
          this.loadPage()
        }
      } else if (this.repair_show) {
        if (!this.repair_date) {
          wepy.showToast({ title: '请选择补签日期', icon: 'none' })
        } else if (!this.cate) {
          wepy.showToast({ title: '请选择支出品类', icon: 'none' })
        } else if (!this.record) {
          wepy.showToast({ title: '请输入支出金额', icon: 'none' })
        } else {
          wx.showModal({
            title: '提示(看清楚了嗷)',
            content: `补签日期:${this.repair_date}\r\n支出金额:${this.record}\r\n支出详情:「${this.cate}」${this.cate_value || '无'}`,
            success: res => {
              if (res.confirm) {
                let pay_list = wepy.getStorageSync('pay_list') ? JSON.parse(wepy.getStorageSync('pay_list')) : []
                const flash = pay_list.some(item => item.date === this.repair_date)
                if (flash) {
                  for (let index = 0; index < pay_list.length; index++) {
                    if (pay_list[index].date === this.repair_date) {
                      pay_list[index].detial.push({ time: moment().format('HH:mm'), pay_price: this.record, cate: this.cate_value, category: this.cate })
                    }
                  }
                } else {
                  pay_list.push({ date: this.repair_date, pay_price: 0, detial: [{time: moment().format('HH:mm'), pay_price: this.record, cate: this.cate_value, category: this.cate}] })
                }
                wepy.setStorageSync('pay_list', JSON.stringify(pay_list))
                this.record = ''
                this.cate_value = ''
                this.repair_date = ''
                this.repair_show = false
                this.loadPage()
              }
            }
          })
        }
      } else if (this.record_show) {
        if (!this.record) {
          wepy.showToast({ title: '请输入支出金额', icon: 'none' })
        } else if (!this.cate) {
          wepy.showToast({ title: '请选择支出品类', icon: 'none' })
        } else {
          wx.showModal({
            title: '提示(看清楚了嗷)',
            content: `支出金额: ${this.record}\r\n详情:「${this.cate}」${this.cate_value || '无'})`,
            success: res => {
              if (res.confirm) {
                let nowdate = moment().format('YYYY-MM-DD')
                let pay_list = wepy.getStorageSync('pay_list') ? JSON.parse(wepy.getStorageSync('pay_list')) : []
                const flash = pay_list.some(item => item.date === nowdate)
                if (flash) {
                  for (let index = 0; index < pay_list.length; index++) {
                    if (pay_list[index].date === nowdate) {
                      pay_list[index].detial.push({ time: moment().format('HH:mm'), pay_price: this.record, cate: this.cate_value, category: this.cate })
                    }
                  }
                } else {
                  pay_list.push({ date: nowdate, pay_price: 0, detial: [{time: moment().format('HH:mm'), pay_price: this.record, cate: this.cate_value, category: this.cate}] })
                }
                wepy.setStorageSync('pay_list', JSON.stringify(pay_list))
                this.record = ''
                this.cate_value = ''
                this.record_show = false
                this.loadPage()
              }
            }
          })
        }
      } else if (this.user_show) {
        let user = {
          user_name: this.user.user_name || '',
          user_desc: this.user.user_desc || '',
          avatar_url: this.user.avatar_url || ''
        }
        this.user = user
        wepy.setStorageSync('user', JSON.stringify(user))
        this.user_show = false
      }
    },
    'onCancel': () => {
      this.quota_show = false
      this.record_show = false
      this.user_show = false
      this.repair_show = false
      this.detial_show = false
      if (wepy.getStorageSync('user')) this.user = JSON.parse(wepy.getStorageSync('user'))
      else this.user = { user_name: '', user_desc: '', avatar_url: '' }
    },
    'spularsEdit': () => {
      this.quota = this.origin_price
      this.quota_show = true
      this.record_show = false
      this.user_show = false
      this.repair_show = false
    },
    'onInputChange': (value) => {
      if (value) {
        if (this.quota_show) this.quota = +value
        else if (this.record_show || this.repair_show) this.record = +value
      }
    },
    'onCateChange': (value, cate) => {
      if (value) this.cate_value = value
    },
    'onCateSelect': (cate) => {
      if (cate) this.cate = cate
    },
    'userInfoEdit': () => {
      this.user_show = true
      this.record_show = false
      this.quota_show = false
      this.repair_show = false
    },
    'onImageChange': () => {
      let that = this
      wx.chooseImage({
        count: 1,
        success (res) {
          that.user.avatar_url = res.tempFilePaths[0]
          that.$apply()
        }
      })
    },
    'onUserNameChange': (user_name) => {
      if (user_name.length > 5) wx.showToast({ icon: 'none', title: '名字不超过5个字嗷' })
      else this.user.user_name = user_name
    },
    'onUserDescChange': (user_desc) => {
      this.user.user_desc = user_desc
    },
    'onDateChange': (date) => {
      this.repair_date = date
    },
    'onRepairUpdate': (currentDate, currentIndex, repairPrice, editTitle) => {
      let pay_list = JSON.parse(wepy.getStorageSync('pay_list'))
      for (let i = 0; i < pay_list.length; i++) {
        if (pay_list[i].date === currentDate) {
          const obj = { title: editTitle, price: +repairPrice, time: moment().format('YYYY-MM-DD HH:mm:ss') }
          if (pay_list[i].detial[currentIndex].records) pay_list[i].detial[currentIndex].records.push(obj)
          else pay_list[i].detial[currentIndex].records = [obj]
          if (editTitle === 'repair') pay_list[i].pay_price += +repairPrice
          else pay_list[i].pay_price -= +repairPrice
        }
      }
      wepy.setStorageSync('pay_list', JSON.stringify(pay_list))
      this.loadPage()
    }
  }

  methods = {
    echartInit (e) {
      this.initChart(e.detail.canvas, e.detail.width, e.detail.height)
    },
    recordInsert() {
      this.record_show = true
      this.quota_show = false
      this.repair_show = false
    },
    recordRepair() {
      this.repair_show = true
      this.record_show = false
      this.quota_show = false
    },
    onReset() {
      this.cate_select = ''
      this.loadPage()
    },
    onCateFilter() {
      this.cates_show = !this.cates_show
    },
    arrowChange() {
      this.arrow_show = !this.arrow_show
    },
    onChooseCate(cate) {
      this.cate_select = ''
      this.loadPage()
      this.cate_select = cate.name
      let pay_list = []
      for (let list of this.pay_list) {
        let detial = []
        for (let item of list.detial) {
          if (item && item.category === this.cate_select) detial.push(item)
        }
        if (detial.length !== 0) {
          let listCopy = Object.assign({}, list, {})
          listCopy.detial = detial
          listCopy.pay_price = 0
          pay_list.push(listCopy)
        }
      }
      this.pay_list = pay_list
      this.loadPage()
    },
    viewMore(item) {
      this.detial_show = true
      this.detial = Object.assign({}, item, { date: moment(item.date).format('DD'), realDate: item.date })
    }
  }
  onLoad() {
    console.log('pigzhou ❤ pigliu')
    let day = moment().format('DD')
    if (day === '01') {
      if (!wepy.getStorageSync('firstdate')) wepy.setStorageSync('pay_list', null)
      wepy.setStorageSync('firstdate', '01')
    } else {
      wepy.setStorageSync('firstdate', '')
    }
    this.loadPage()
  }

  onShareAppMessage(options) {
    return {
      title: `pigzhou ❤ pigliu | 猪头小账本`,
      success: res => this.showSuccess('分享成功'),
      fail: res => this.showError('分享失败，请稍后再试')
    }
  }

  loadPage() {
    if (wepy.getStorageSync('origin_price')) this.origin_price = JSON.parse(wepy.getStorageSync('origin_price'))
    if (wepy.getStorageSync('pay_list') && !this.cate_select) this.pay_list = JSON.parse(wepy.getStorageSync('pay_list')).sort((a, b) => moment(b.date).isBefore(a.date) ? -1 : 1)
    if (wepy.getStorageSync('user')) this.user = JSON.parse(wepy.getStorageSync('user'))
    let spulars_price = 0
    let total_price = 0
    for (let index = 0; index < this.pay_list.length; index++) {
      for (let item of this.pay_list[index].detial) {
        this.pay_list[index].pay_price += item.pay_price
      }
      spulars_price += (this.origin_price - this.pay_list[index].pay_price)
      total_price += this.pay_list[index].pay_price
    }
    this.spulars_price = this.pay_list.length > 0 ? spulars_price : this.origin_price
    this.total_price = total_price
    this.$apply()
  }
}
</script>
<style lang="less">
.page {
  .line-chart {
    width: 700rpx;
    height: 600rpx;
    margin: 0 auto;
  }
  .user-card {
    background: #fff;
    border-radius: 10rpx;
    padding: 36rpx;
    .card-header {
      display: flex;
    }
    .card-content {
      margin-top: 36rpx;
      .title {
        display: flex;
        align-items: center;
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 24rpx;
        .edit {
          width: 50%;
          align-items: center;
          display: flex;
          justify-content: flex-end;
          margin-left: auto;
        }
        image {
          width: 50rpx;
          height: 50rpx;
        }
      }
      .cates_list {
        overflow: hidden;
        transition: height 0.3s;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        span {
          margin-bottom: 18rpx;
          padding: 6rpx 28rpx;
          border-radius: 50rpx;
          color: #fff;
          font-size: 13px;
          white-space: nowrap;
          margin-right: 20rpx;
          display: block;
        }
      }
      .pay_list {
        .empty {
          margin-top: 48rpx;
          color: #9b9b9b;
          text-align: center;
        }
        .item_list {
          transition: height 0.3s;
          overflow-y: scroll;
        }
        .deatial {
          display: flex;
          margin-top: 32rpx;
          font-size: 14px;
          border-radius: 100rpx;
          position: relative;
          .date, .pay_price, .surplus_price {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
          }
          .icon_arrow {
            transition: 0.3s;
            width: 30rpx;
            height: 30rpx;
            position: absolute;
            top: 28rpx;
            left: 42rpx;
          }
          .surplus_price {
            button {
              font-size: 14px;
              padding: 0 16rpx;
              margin: 0 0 0 auto;
              border: none;
              text-decoration: underline;
            }
          }
        }
      }
    }
  }
  .charts-title {
    padding-left: 36rpx;
    font-weight: 500;
  }
}
</style>
