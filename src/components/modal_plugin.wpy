<template>
  <block>
    <view
      wx:if="{{show}}"
      class="modal-mask"
      catchtouchmove="preventTouchMove"
      bindtap="onCancel" />
    <view class="modal-dialog" wx:if="{{ show }}" style="top: {{ cate_edit === 'true' ? '12%' : '22%' }}">
      <view class="modal-title">{{ title }}</view>
      <block wx:if="{{ detial_edit === 'true' }}">
        <view class="modal-content">
          <view class="view-tip">
            <image src="../images/icon_cancadar.png" style="width: 70rpx" mode="widthFix" />
            <span class="tip-date">{{ detial.date }}</span>
            <span style="margin-left: 24rpx">支出金额: <span style="color: #18baa5; font-size: 16px">{{ detial.pay_price }}</span></span>
            <span style="margin-left: 24rpx">可支配金额: <span style="font-size: 16px; color: {{ origin_price - detial.pay_price > 0 ? '#18baa5' : '#ff547a' }}">{{ origin_price - detial.pay_price }}</span></span>
          </view>
          <view class="view-slice">
            <repeat for="{{ detial.detial }}" item="item" index="index" key="id">
              <view class="view-item">
                <span wx:if="{{ item.category }}" class="tag" style="font-size: 12px; padding: 4rpx 12rpx; border-radius: 8rpx; background: {{ common.getTagColor(item.category, cates) }}; height: 18px; line-height: 18px">{{ item.category }}</span>
                <span>{{ item.time }} </span>
                <span style="margin-left: 12px">{{ item.cate }}</span>
                <span style="color: #ff547a; font-size: 18px; margin: 0 5px"> {{ item.pay_price }} </span>元
                <span wx:if="{{item.records}}" class="repair-tag" bindtap="onTagChange({{item.records}},{{index}})">有退补</span>
                <div style="display: flex; margin-left: auto">
                  <span class="btn-repair" bindtap="onItemEdit('repair', {{index}})">补</span>
                  <span class="btn-refund" bindtap="onItemEdit('refund', {{index}})" style="margin-right: 0">退</span>
                </div>
              </view>
              <input
                wx:if="{{index === currentIndex}}"
                placeholder-class="repair-input-holder"
                class="repair-input"
                type="number"
                placeholder="请输入差价({{ editTitle === 'repair' ? '补' : '退' }})"
                bindinput="onRepairChange"
              />
              <block wx:if="{{ visible && recordIndex === index }}">
                <repeat for="{{ records }}" item="record" key="id">
                  <view class="view-item" style="font-size: 12px; margin-left: 10rpx">
                    <span wx:if="{{ record.title === 'repair' }}" class="btn-repair-mini">补</span>
                    <span wx:else class="btn-refund-mini">退</span>
                    <span>{{ record.time }} </span>
                    <span style="color: #ff547a; font-size: 14px; margin: 0 5px"> {{ record.price }} </span>元
                  </view>
                </repeat>
              </block>
            </repeat>
          </view>
        </view>
      </block>
      <block wx:elif="{{ user_edit === 'false' }}">
        <view class="modal-content" style="padding-bottom: 0; margin-bottom: -24rpx">
          <view class="cate" wx:if="{{ cate_edit === 'true' }}">
            <repeat for="{{ cates }}" item="cate">
              <span class="tag" bindtap="onCateSelect({{ cate }})" style="background: {{ cate.background }}; display: block; margin-bottom: 18rpx">{{ cate.name }}</span>
            </repeat>
          </view>
          <view class="modal-input" wx:if="{{ repair_edit === 'true' }}" style="margin-bottom: 28rpx">
            <picker mode="date" start="2021-09-01" end="{{ endDate }}" bindchange="onDateChange">
              <input
                placeholder-class="input-holder"
                class="input"
                disabled="true"
                placeholder="请选择补签日期"
                value="{{ date }}" />
            </picker>
          </view>
          <view class="modal-input" wx:if="{{ cate_edit === 'true' }}" style="margin-bottom: 12rpx">
            <input
              placeholder-class="input-holder"
              bindinput="onCateChange"
              class="input"
              placeholder="请输入购买详情(选填)">
              <div class="tag input-tag" style="background: {{ background }}; padding: 6rpx 16rpx; border-radius: 8rpx">{{ cate }}</div></input>
          </view>
        </view>
        <view class="modal-content">
          <view class="modal-input">
            <input
              placeholder-class="input-holder"
              type="number"
              maxlength="10"
              bindinput="onInputChange"
              class="input"
              placeholder="{{ placeholder }}" />
          </view>
        </view>
      </block>
      <block wx:else>
        <view class="modal-content">
          <view class="avatar" bindtap="onImageChange">
            <image
              src="{{ user.avatar_url || '../images/icon_avatar.png' }}"
              style="background: {{ avatar_url ? '' : 'rgba(0, 0, 0, 0.2)' }}" />
          </view>
          <input
            value="{{ user.user_name }}"
            style="margin-top: 12rpx; border-bottom: 2rpx solid #f5f5f5"
            bindinput="onUserNameChange"
            class="input"
            placeholder="请输入昵称" />
          <input
            value="{{ user.user_desc }}"
            style="margin-top: 24rpx; border-bottom: 2rpx solid #f5f5f5"
            bindinput="onUserDescChange"
            class="input"
            placeholder="请输入简介(一句话)" />
        </view>
      </block>

      <button class="btn-close" wx:if="{{ detial_edit === 'true' }}" plain="true" bindtap="onCancel">ok</button>

      <view class="modal-footer" wx:else>
        <view class="btn-cancel" bindtap="onCancel">取消</view>
        <view class="btn-confirm" bindtap="onConfirm">确定</view>
      </view>
    </view>
  </block>
</template>
<script>
import wepy from 'wepy'
import moment from 'moment'
import common from '../common.wxs'
export default class ModalPlugin extends wepy.component {
  wxs = {
    common: common
  }
  props = {
    title: {
      type: String,
      default: ''
    },
    show: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String,
      default: ''
    },
    user_edit: {
      type: String,
      default: 'false'
    },
    cate_edit: {
      type: String,
      default: 'false'
    },
    repair_edit: {
      type: String,
      default: 'false'
    },
    detial_edit: {
      type: String,
      default: 'false'
    },
    user: {
      type: Object,
      default: {}
    },
    detial: {
      type: Object,
      default: {}
    },
    cates: {
      type: Array,
      default: []
    },
    date: {
      type: String,
      default: ''
    },
    origin_price: {
      type: Number,
      default: 0
    }
  }
  data = {
    cate: '',
    background: '',
    currentIndex: null,
    recordIndex: null,
    repairPrice: null,
    records: [],
    visible: false,
    endDate: moment().format('YYYY-MM-DD'),
    editTitle: 'repair'
  }
  methods = {
    onItemEdit (editTitle, index) {
      this.editTitle = editTitle
      this.currentIndex = index
    },
    onRepairChange(e) {
      this.repairPrice = e.detail.value
    },
    onTagChange(records, index) {
      if (this.recordIndex === index) {
        this.recordIndex = null
        this.visible = false
      } else {
        this.records = records
        this.recordIndex = index
        this.visible = true
      }
    },
    onInputChange(e) {
      this.$emit('onInputChange', e.detail.value)
    },
    onCateChange(e) {
      this.$emit('onCateChange', e.detail.value)
    },
    onConfirm() {
      this.$emit('onConfirm')
    },
    onCancel() {
      if (this.detial_edit === 'true' && this.repairPrice) {
        this.$emit('onRepairUpdate', this.detial.realDate, this.currentIndex, this.repairPrice, this.editTitle)
      }
      this.currentIndex = null
      this.recordIndex = null
      this.repairPrice = null
      this.records = []
      this.$emit('onCancel')
    },
    onImageChange() {
      this.$emit('onImageChange')
    },
    onUserNameChange(e) {
      this.$emit('onUserNameChange', e.detail.value)
    },
    onUserDescChange(e) {
      this.$emit('onUserDescChange', e.detail.value)
    },
    onCateSelect(cate) {
      this.cate = cate.name
      this.background = cate.background
      this.$emit('onCateSelect', cate.name)
    },
    onDateChange(e) {
      this.$emit('onDateChange', e.detail.value)
    }
  }
}
</script>

<style lang="less">
.modal-mask {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #000;
  opacity: 0.5;
  overflow: hidden;
  z-index: 999;
  color: #fff;
}
.modal-dialog {
  animation: fadeleftIn .3s;
  animation-name: popIn;
  position: fixed;
  top: 25%;
  left: 48rpx;
  right: 48rpx;
  z-index: 9999;
  background: #fff;
  border-radius: 25rpx;
}
.modal-title {
  padding-top: 50rpx;
  font-size: 18px;
  font-weight: 500;
  letter-spacing: 2rpx;
  margin-left: 60rpx;
}
.view-tip {
  position: relative;
  display: flex;
  align-items: center;
  font-size: 13px;
  .tip-date {
    position: absolute;
    top: 18rpx;
    left: 16rpx;
    color: #fff;
    font-size: 16px;
  }
}
.view-slice {
  margin-top: 12rpx;
  font-size: 13px;
  .repair-input {
    height: 60rpx;
    line-height: 60rpx;
    padding-left: 24rpx;
    margin: 16rpx 0 0 auto;
    border-radius: 100rpx;
    background: #f1f1f1;
  }
  .repair-input-holder {
    color: #9b9b9b;
  }
}
.view-item {
  display: flex;
  align-items: center;
  margin: 24rpx 0 0 4rpx;
  font-size: 14px;
  .repair-tag {
    font-size: 8px;
    color: #ff4d4f;
    margin-top: -5px;
  }
  .btn-repair, .btn-refund, .btn-repair-mini, .btn-refund-mini {
    display: block;
    border-radius: 50%;
    font-size: 12px;
    width: 36rpx;
    height: 36rpx;
    border: 2rpx solid #18baa5;
    line-height: 36rpx;
    text-align: center;
    color: #18baa5;
    margin-right: 24rpx;
    overflow: hidden;
  }
  .btn-refund, .btn-refund-mini {
    border: 2rpx solid #ffb3b3;
    color: #ffb3b3;
  }
  .btn-repair-mini, .btn-refund-mini {
    font-size: 8px;
    width: 20rpx;
    height: 20rpx;
    line-height: 20rpx;
    margin-right: 12rpx;
  }
}
.tag {
  padding: 6rpx 30rpx;
  border-radius: 50rpx;
  color: #fff;
  font-size: 13px;
  white-space: nowrap;
  margin-right: 20rpx;
}
.input-tag {
  margin-top: -28rpx;
  position: absolute;
  right: 12rpx;
  top: 48rpx;
}
.modal-content {
  padding: 40rpx 60rpx 60rpx 60rpx;
  .cate {
    margin-bottom: 18rpx;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }
}
.modal-input {
  border: 2rpx solid #f1f1f1;
  border-radius: 10rpx;
  font-size: 28rpx;
}

.input {
  height: 80rpx;
  line-height: 28rpx;
  padding: 0 20rpx;
  box-sizing: border-box;
  position: relative;
}
input-holder {
  color: #9b9b9b;
}

.btn-close {
  background: #ffb3b3 !important;
  border: 0 !important;
  color: #fff !important;
  border-radius: 100rpx;
  margin: 0 25% 36rpx 25%;
  line-height: 80rpx;
}

.modal-footer {
  display: flex;
  height: 100rpx;
  border-top: 1px solid #f1f1f1;
  font-size: 34rpx;
  line-height: 100rpx;
}
.btn-cancel {
  width: 50%;
  text-align: center;
  border-right: 2rpx solid #f1f1f1;
  font-weight: 600;
}
.btn-confirm {
  width: 50%;
  color: #576b95;
  text-align: center;
  font-weight: 600;
}
.avatar {
  text-align: center;
  image {
    width: 150rpx;
    height: 150rpx;
    border-radius: 50%;
  }
}
@keyframes fadeleftIn {
  0% {
    -webkit-transform: translate3d(100%, 0, 0);
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }
  100% {
    -webkit-transform: none;
    transform: none;
  }
}
@keyframes popIn {
  0% {
    -webkit-transform: scale3d(0, 0, 0);
    transform: scale3d(0.5, 0.5, 0.5);
    opacity: 0;
  }
  50% {
    -webkit-animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
    animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
    -webkit-animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    opacity: 1;
  }
}
</style>
