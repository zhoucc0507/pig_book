<template>
  <block>
    <view
      class="modal-mask"
      catchtouchmove="preventTouchMove"
      wx:if="{{show}}" />
    <view class="modal-dialog" wx:if="{{ show }}" style="top: {{ cate_edit === 'true' ? '15%' : '25%' }}">
      <view class="modal-title">{{ title }}</view>
      <block wx:if="{{ user_edit === 'false' }}">
        <view class="modal-content" style="padding-bottom: 0; margin-bottom: -24rpx">
          <view class="cate" wx:if="{{ cate_edit === 'true' }}">
            <repeat for="{{ cates }}" item="cate">
              <span class="tag" bindtap="onCateSelect({{ cate }})" style="background: {{ cate.background }}; display: block; margin-bottom: 12rpx">{{ cate.name }}</span>
            </repeat>
          </view>
          <view class="modal-input" wx:if="{{ cate_edit === 'true' }}">
            <input
              placeholder-class="input-holder"
              bindinput="onCateChange"
              class="input"
              placeholder="请输入购买详情(选填)">
              <div class="tag input-tag" style="background: {{ background }}">{{ cate }}</div></input>
          </view>
        </view>
        <view class="modal-content">
          <view class="modal-input">
            <input
              placeholder-class="input-holder"
              type="number"
              maxlength="10"
              bindinput="onInputChange"
              class="input"
              placeholder="{{ placeholder }}" />
          </view>
        </view>
      </block>
      <block wx:else>
        <view class="modal-content">
          <view class="avatar" bindtap="onImageChange">
            <image
              src="{{ user.avatar_url || '../images/icon_avatar.png' }}"
              style="background: {{ avatar_url ? '' : 'rgba(0, 0, 0, 0.2)' }}" />
          </view>
          <input
            value="{{ user.user_name }}"
            style="margin-top: 12rpx; border-bottom: 2rpx solid #f5f5f5"
            bindinput="onUserNameChange"
            class="input"
            placeholder="请输入昵称" />
          <input
            value="{{ user.user_desc }}"
            style="margin-top: 24rpx; border-bottom: 2rpx solid #f5f5f5"
            bindinput="onUserDescChange"
            class="input"
            placeholder="请输入简介(一句话)" />
        </view>
      </block>

      <view class="modal-footer">
        <view class="btn-cancel" bindtap="onCancel">取消</view>
        <view class="btn-confirm" bindtap="onConfirm">确定</view>
      </view>
    </view>
  </block>
</template>
<script>
import wepy from 'wepy'
export default class ModalPlugin extends wepy.component {
  props = {
    title: {
      type: String,
      default: ''
    },
    show: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String,
      default: ''
    },
    user_edit: {
      type: String,
      default: 'false'
    },
    cate_edit: {
      type: String,
      default: 'false'
    },
    user: {
      type: Object,
      default: {}
    }
  }
  data = {
    cates: [
      {name: '红包', background: '#f50'},
      {name: '餐饮', background: '#87d068'},
      {name: '出行', background: '#87e8de'},
      {name: '百货', background: '#d3adf7'},
      {name: '服饰', background: '#adc6ff'},
      {name: '美妆', background: '#91d5ff'},
      {name: '数码', background: '#ffadd2'},
      {name: '美发', background: '#ffe58f'}
    ],
    cate: '',
    background: ''
  }
  methods = {
    onInputChange(e) {
      this.$emit('onInputChange', e.detail.value)
    },
    onCateChange(e) {
      this.$emit('onCateChange', e.detail.value)
    },
    onConfirm() {
      this.$emit('onConfirm')
    },
    onCancel() {
      this.$emit('onCancel')
    },
    onImageChange() {
      this.$emit('onImageChange')
    },
    onUserNameChange(e) {
      this.$emit('onUserNameChange', e.detail.value)
    },
    onUserDescChange(e) {
      this.$emit('onUserDescChange', e.detail.value)
    },
    onCateSelect(cate) {
      this.cate = cate.name
      this.background = cate.background
      this.$emit('onCateSelect', cate.name)
    }
  }
}
</script>

<style lang="less" scoped>
.modal-mask {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #000;
  opacity: 0.5;
  overflow: hidden;
  z-index: 999;
  color: #fff;
}
.modal-dialog {
  animation: fadeleftIn .3s;
  animation-name: popIn;
  position: fixed;
  top: 25%;
  left: 48rpx;
  right: 48rpx;
  z-index: 9999;
  background: #fff;
  border-radius: 25rpx;
}
.modal-title {
  padding-top: 50rpx;
  font-size: 18px;
  font-weight: 500;
  letter-spacing: 2rpx;
  text-align: center;
}
.tag {
  padding: 6rpx 16rpx;
  border-radius: 8rpx;
  color: #fff;
  font-size: 13px;
  white-space: nowrap;
  margin-right: 20rpx;
}
.input-tag {
  margin-top: -28rpx;
  position: absolute;
  right: 12rpx;
  top: 48rpx;
}
.modal-content {
  padding: 60rpx;
  .cate {
    margin-bottom: 24rpx;
    display: flex;
    flex-wrap: wrap;
  }
}
.modal-input {
  border: 2rpx solid #f1f1f1;
  border-radius: 10rpx;
  font-size: 28rpx;
}

.input {
  height: 80rpx;
  line-height: 28rpx;
  padding: 0 20rpx;
  box-sizing: border-box;
  position: relative;
}
input-holder {
  color: #9b9b9b;
}

.modal-footer {
  display: flex;
  height: 100rpx;
  border-top: 1px solid #f1f1f1;
  font-size: 34rpx;
  line-height: 100rpx;
}
.btn-cancel {
  width: 50%;
  text-align: center;
  border-right: 2rpx solid #f1f1f1;
  font-weight: 600;
}
.btn-confirm {
  width: 50%;
  color: #576b95;
  text-align: center;
  font-weight: 600;
}
.avatar {
  text-align: center;
  image {
    width: 150rpx;
    height: 150rpx;
    border-radius: 50%;
  }
}
@keyframes fadeleftIn {
  0% {
    -webkit-transform: translate3d(100%, 0, 0);
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }
  100% {
    -webkit-transform: none;
    transform: none;
  }
}
@keyframes popIn {
  0% {
    -webkit-transform: scale3d(0, 0, 0);
    transform: scale3d(0.5, 0.5, 0.5);
    opacity: 0;
  }
  50% {
    -webkit-animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
    animation-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
    -webkit-animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    opacity: 1;
  }
}
</style>
